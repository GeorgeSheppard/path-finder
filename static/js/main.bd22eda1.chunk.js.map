{"version":3,"sources":["assets/maze.svg","Canvas/canvas.tsx","Utilities/utilities.js","Algorithms/solver.ts","Algorithms/Dijkstra/dijkstra.ts","redux/reducer.ts","redux/store.ts","redux/mazes.ts","redux/actions.ts","redux/dispatchers.ts","Algorithms/base.js","Hexagon/hexagon.tsx","hooks/stateHook.ts","HexagonGrid/hexagonGrid.tsx","HexagonGrid/hexagonGridManager.tsx","Toolbar/toolbar.tsx","App.js","index.js"],"names":["module","exports","Canvas","props","state","ref","createRef","windowSize","height","width","this","setState","current","offsetHeight","offsetWidth","nextProps","nextState","currentWindow","nextWindow","console","log","style","overflow","backgroundColor","Component","siderWidth","headerHeight","React","arrayEquals","a","b","Array","isArray","length","every","val","index","twoDToOneDCoord","coord","sizeY","openNotification","title","message","duration","notification","open","description","neighbours","sizeX","x","y","map","filter","PathError","m","Object","setPrototypeOf","prototype","Error","solver","grid1D","shortestPathGrid","startCoord","endCoord","moveOrder","coords","iterations","checkedCoordsOrder","curCoord","shift","moves","move","coord1D","type","push","path","finishedShortestPathGrid","coordsOrder","dijkstraMoveOrder","limitedState","wall","goal","start","space","animated","initialState","algorithm","selected","mouseState","fullHexagonStates","individualHexagonStates","gridSize","reset","mazes","Default","CleanGrid","LongMaze","HexagonMaze","MaizeMaze","createStore","action","newIndividualHexagonStates","newFullHexagonStates","payload","newState","stringCoord","toString","currentState","listCoord","oldLimitedCoord","hexStringCoord","split","Number","animatedWipedHexagonIndividualStates","key","animationWipedHexagonFullStates","mazeName","name","newIndividualStates","newHexagonStates","dispatchHexagonState","store","dispatch","dispatchNewSelected","dispatchNewGridSize","dispatchResetAnimation","dispatchAnimationStopped","dispatchPresetGrid","pathFinder","hexagonStates","dispatchPath","dispatchSolverAnimation","fill","wallCoord","goal1DCoord","start1DCoord","getState","setTimeout","checkedPeriod","slice","reverse","pathPeriod","error","StyledHexagon","styled","div","middleWidth","middleHeight","topBotDiameter","left","topBot","StyledHexagonWithBorder","largeHex","smallHex","leftShift","downShift","smallHexTransform","zIndex","transform","hexagonStylingProps","Math","sqrt","margin","scaleTransform","Hexagon","handleChange","event","oldType","button","newType","hexagonState","useSelector","useHexagonState","typeToStyling","onClick","onMouseOver","handleHover","onMouseDown","onDragStart","preventDefault","onContextMenu","HexagonGrid","pixelsCoords","gridProps","data-tut","i","offsetX","offsetY","HexagonGridManager","borderWidth","spacing","createGrid","horizontalSpacing","verticalSpacing","floor","j","hexagonCssProps","reducedHexagonCssProps","pixelsX","coordToPixels","SubMenu","Menu","Sider","Layout","Header","Toolbar","headerStyle","useEffect","paddingLeft","paddingRight","float","src","maze","alt","color","theme","mode","position","display","justifyContent","Item","top","setIsTourOpen","right","copyable","alignItems","href","GithubOutlined","fontSize","LinkedinOutlined","className","icon","AppstoreAddOutlined","undefined","CalculatorOutlined","dispatchNewAlgorithm","SettingOutlined","marginTop","marginRight","marginLeft","shape","size","disabled","JSON","stringify","router","block","Page","steps","selector","content","App","useState","isTourOpen","handleMouseDown","onMouseUp","isOpen","onRequestClose","disableInteration","maskSpace","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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Q,OACR,QAAS,OACT,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,QAAS,OACT,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,QAAS,OACT,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,QAAS,OACT,QAAS,OACT,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,QAAS,OACT,OAAQ,QAEVC,YAAa,CACX,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,QAAS,OACT,QAAS,OACT,QAAS,OACT,QAAS,OACT,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,OAAQ,OACR,MAAO,OACP,MAAO,OACP,MAAO,OACP,MAAO,OACP,MA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","file":"static/js/main.bd22eda1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/maze.298f4121.svg\";","import React, { createRef } from \"react\";\r\n\r\ntype CanvasProps = {\r\n  Component: Function;\r\n  [key: string]: any;\r\n};\r\n\r\nexport type WindowSize = {\r\n  height: number;\r\n  width: number;\r\n};\r\n\r\ntype Ref = React.RefObject<HTMLDivElement>;\r\n\r\ntype CanvasState = {\r\n  ref: Ref;\r\n  windowSize: {\r\n    height: number;\r\n    width: number;\r\n  };\r\n};\r\n\r\n/**\r\n * Helper component that sends the size of the window it fills to the child\r\n * component\r\n * @param {object} props the child component, and any props to pass to the child\r\n * component\r\n */\r\nclass Canvas extends React.Component<CanvasProps, CanvasState> {\r\n  constructor(props: CanvasProps) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      ref: createRef(),\r\n      windowSize: {\r\n        height: 0,\r\n        width: 0,\r\n      },\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const ref: Ref = this.state.ref;\r\n    this.setState({\r\n      windowSize: {\r\n        height: ref.current?.offsetHeight ?? 0,\r\n        width: ref.current?.offsetWidth ?? 0,\r\n      },\r\n    });\r\n  }\r\n\r\n  shouldComponentUpdate(nextProps: CanvasProps, nextState: CanvasState) {\r\n    const currentWindow = this.state.windowSize;\r\n    const nextWindow = nextState.windowSize;\r\n    return (\r\n      currentWindow.height !== nextWindow.height ||\r\n      currentWindow.width !== nextWindow.width\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const canvasStyle = {\r\n      overflow: \"hidden\",\r\n      height: \"100vh\",\r\n      width: \"100vw\",\r\n      backgroundColor: \"#dddddd\",\r\n    };\r\n\r\n    console.log(\"windowSize\", this.state.windowSize);\r\n\r\n    return (\r\n      <div ref={this.state.ref} style={canvasStyle}>\r\n        <this.props.Component\r\n          {...{\r\n            ...{\r\n              windowSize: this.state.windowSize,\r\n              siderWidth: this.props.siderWidth,\r\n              headerHeight: this.props.headerHeight,\r\n            },\r\n            ...this.props,\r\n          }}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Canvas;\r\n","import { notification } from \"antd\";\r\n\r\nexport function arrayEquals(a, b) {\r\n  return (\r\n    Array.isArray(a) &&\r\n    Array.isArray(b) &&\r\n    a.length === b.length &&\r\n    a.every((val, index) => val === b[index])\r\n  );\r\n}\r\n\r\nexport function twoDToOneDCoord(coord, sizeY) {\r\n  return coord[0] * sizeY + coord[1];\r\n}\r\n\r\nexport const openNotification = (title, message, duration = 4.5) => {\r\n  notification.open({\r\n    message: title,\r\n    description: message,\r\n    duration,\r\n  });\r\n};\r\n","import { arrayEquals, twoDToOneDCoord } from \"../Utilities/utilities\";\r\nimport { Coord, Coords } from \"../types/dtypes\";\r\n\r\ntype Grid1D = Array<1 | 0 | -1>;\r\ntype ShortestPathGrid = Array<Coord | -1>;\r\ntype MoveOrder = (\r\n  neighbours: Coords,\r\n  curCoord: Coord,\r\n  startCoord: Coord,\r\n  endCoord: Coord\r\n) => Coords;\r\n\r\nexport const neighbours = (\r\n  coord: Coord,\r\n  sizeX: number,\r\n  sizeY: number\r\n): Coords => {\r\n  const [x, y] = coord;\r\n\r\n  let neighboursRelative;\r\n  if (y % 2 === 0) {\r\n    neighboursRelative = [\r\n      [-1, -1],\r\n      [0, -1],\r\n      [1, 0],\r\n      [0, 1],\r\n      [-1, 1],\r\n      [-1, 0],\r\n    ];\r\n  } else {\r\n    neighboursRelative = [\r\n      [0, -1],\r\n      [1, -1],\r\n      [1, 0],\r\n      [1, 1],\r\n      [0, 1],\r\n      [-1, 0],\r\n    ];\r\n  }\r\n\r\n  return neighboursRelative\r\n    .map((coord) => [coord[0] + x, coord[1] + y])\r\n    .filter((coord) => {\r\n      const [x, y] = coord;\r\n      return x >= 0 && x < sizeX && y >= 0 && y < sizeY;\r\n    }) as Coords;\r\n};\r\n\r\nexport class PathError extends Error {\r\n  constructor(m: string) {\r\n    super(m);\r\n\r\n    Object.setPrototypeOf(this, PathError.prototype);\r\n  }\r\n}\r\n\r\nexport const solver = (\r\n  grid1D: Grid1D,\r\n  shortestPathGrid: ShortestPathGrid,\r\n  startCoord: Coord,\r\n  endCoord: Coord,\r\n  sizeX: number,\r\n  sizeY: number,\r\n  moveOrder: MoveOrder\r\n) => {\r\n  let coords = [startCoord];\r\n  let iterations = 0;\r\n  let checkedCoordsOrder = [];\r\n\r\n  while (coords.length > 0) {\r\n    // If a maze is solveable then at most you should have to check every square once\r\n    if (iterations > sizeX * sizeY) {\r\n      throw new Error(\"MaxIterationsError\");\r\n    }\r\n    iterations += 1;\r\n    const curCoord = coords.shift() as Coord;\r\n\r\n    // Order which neighbour tiles should be checked first\r\n    const moves = moveOrder(\r\n      neighbours(curCoord, sizeX, sizeY),\r\n      curCoord,\r\n      startCoord,\r\n      endCoord\r\n    );\r\n\r\n    for (const move of moves) {\r\n      const coord1D = twoDToOneDCoord(move, sizeY);\r\n      // Type of square to move to, 1 is end, -1 is wall\r\n      const type = grid1D[coord1D];\r\n\r\n      if (type === 1) {\r\n        // End tile found\r\n        shortestPathGrid[coord1D] = curCoord;\r\n        coords = [];\r\n        break;\r\n      } else if (type === -1) {\r\n        // Wall tile found\r\n        if (coords.length === 0) {\r\n          console.log(\r\n            \"Ran out of coordinates\",\r\n            grid1D,\r\n            shortestPathGrid,\r\n            coords,\r\n            checkedCoordsOrder\r\n          );\r\n        }\r\n      } else {\r\n        // Empty tile\r\n        // If the tile hasn't been found before, point to the previous\r\n        // tile to get there\r\n        if (\r\n          shortestPathGrid[coord1D] === -1 &&\r\n          !arrayEquals(move, startCoord)\r\n        ) {\r\n          checkedCoordsOrder.push(move);\r\n          shortestPathGrid[coord1D] = curCoord;\r\n          coords.push(move);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const path = [endCoord];\r\n  while (path[path.length - 1] !== startCoord) {\r\n    const coord =\r\n      shortestPathGrid[twoDToOneDCoord(path[path.length - 1], sizeY)];\r\n    if (coord !== -1) {\r\n      path.push(coord);\r\n    } else {\r\n      throw new PathError(\"Path not possible\");\r\n    }\r\n  }\r\n\r\n  return {\r\n    path,\r\n    finishedShortestPathGrid: shortestPathGrid,\r\n    coordsOrder: checkedCoordsOrder,\r\n  };\r\n};\r\n","import { Coord, Coords } from \"../../types/dtypes\"\r\n\r\nexport const dijkstraMoveOrder = (neighbours: Coords, curCoord: Coord, startCoord: Coord, endCoord: Coord) => {\r\n  return neighbours;\r\n}","import {\r\n  Actions,\r\n  NEW_HEXAGON_STATE,\r\n  NEW_MOUSE_STATE,\r\n  NEW_SELECTED,\r\n  NEW_ALGORITHM,\r\n  NEW_GRID_SIZE,\r\n  RESET_ANIMATIONS,\r\n  ANIMATION_STOPPED,\r\n  PRESET_GRID,\r\n} from \"./actions\";\r\nimport { Coord } from \"../types/dtypes\";\r\nimport { Store, initialState } from \"./store\";\r\nimport { arrayEquals } from \"../Utilities/utilities\";\r\n\r\nconst limitedState = {\r\n  wall: false,\r\n  goal: true,\r\n  start: true,\r\n  space: false,\r\n  animated: false,\r\n  path: false,\r\n};\r\n\r\nexport const stateReducer = (\r\n  state: Store | undefined = initialState,\r\n  action: Actions\r\n) => {\r\n  switch (action.type) {\r\n    case NEW_HEXAGON_STATE:\r\n      const newIndividualHexagonStates = { ...state.individualHexagonStates };\r\n      let newFullHexagonStates = { ...state.fullHexagonStates };\r\n\r\n      const { coord, newState } = action.payload;\r\n      const stringCoord = coord.toString();\r\n\r\n      // Note: Only store hexagon state when it isn't space\r\n      if (newState !== \"space\") {\r\n        newIndividualHexagonStates[stringCoord] = newState;\r\n      } else if (stringCoord in newIndividualHexagonStates) {\r\n        // Note: If the new space is state then it should be removed from the redux store\r\n        delete newIndividualHexagonStates[stringCoord];\r\n      }\r\n\r\n      const currentState = state.individualHexagonStates[stringCoord];\r\n      if (currentState) {\r\n        // Note: Remove old state from redux\r\n        newFullHexagonStates[currentState] = newFullHexagonStates[\r\n          currentState\r\n        ].filter((listCoord: Coord) => !arrayEquals(coord, listCoord));\r\n      }\r\n\r\n      if (newState !== \"space\") {\r\n        if (limitedState[newState]) {\r\n          const oldLimitedCoord = newFullHexagonStates[newState][0];\r\n          // Note: Remove coordinate where limited hexagon used to be\r\n          if (oldLimitedCoord) {\r\n            delete newIndividualHexagonStates[oldLimitedCoord.toString()];\r\n          }\r\n          newFullHexagonStates[newState] = [coord];\r\n        } else {\r\n          newFullHexagonStates[newState].push(coord);\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        individualHexagonStates: newIndividualHexagonStates,\r\n        fullHexagonStates: newFullHexagonStates,\r\n      };\r\n    case NEW_MOUSE_STATE:\r\n      return { ...state, mouseState: action.payload.mouseState };\r\n    case NEW_SELECTED:\r\n      return { ...state, selected: action.payload.selected };\r\n    case NEW_ALGORITHM:\r\n      return { ...state, algorithm: action.payload.algorithm };\r\n    case NEW_GRID_SIZE:\r\n      const individualHexagonStates = { ...state.individualHexagonStates };\r\n      let fullHexagonStates = { ...state.fullHexagonStates };\r\n\r\n      const sizeX =\r\n        action.payload.sizeX === -1\r\n          ? state.gridSize.sizeX\r\n          : action.payload.sizeX;\r\n      const sizeY =\r\n        action.payload.sizeY === -1\r\n          ? state.gridSize.sizeY\r\n          : action.payload.sizeY;\r\n\r\n      for (const hexStringCoord in individualHexagonStates) {\r\n        const coord = hexStringCoord.split(\",\").map(Number);\r\n        if (coord[0] >= sizeX || coord[1] >= sizeY) {\r\n          const type = individualHexagonStates[hexStringCoord];\r\n          delete individualHexagonStates[hexStringCoord];\r\n          fullHexagonStates[type] = fullHexagonStates[type].filter(\r\n            (listCoord: Coord) => !arrayEquals(coord, listCoord)\r\n          );\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        gridSize: { sizeX, sizeY },\r\n        individualHexagonStates,\r\n        fullHexagonStates,\r\n      };\r\n    case RESET_ANIMATIONS:\r\n      const animatedWipedHexagonIndividualStates = {\r\n        ...state.individualHexagonStates,\r\n      };\r\n\r\n      for (const key in animatedWipedHexagonIndividualStates) {\r\n        if (\r\n          animatedWipedHexagonIndividualStates[key] === \"animated\" ||\r\n          animatedWipedHexagonIndividualStates[key] === \"path\"\r\n        ) {\r\n          delete animatedWipedHexagonIndividualStates[key];\r\n        }\r\n      }\r\n\r\n      const animationWipedHexagonFullStates = { ...state.fullHexagonStates };\r\n      animationWipedHexagonFullStates.animated = [];\r\n      animationWipedHexagonFullStates.path = [];\r\n\r\n      return {\r\n        ...state,\r\n        fullHexagonStates: animationWipedHexagonFullStates,\r\n        individualHexagonStates: animatedWipedHexagonIndividualStates,\r\n        reset: true,\r\n      };\r\n    case ANIMATION_STOPPED:\r\n      return {\r\n        ...state,\r\n        reset: false,\r\n      };\r\n    case PRESET_GRID:\r\n      const mazeName = action.payload.name;\r\n\r\n      let newIndividualStates = { ...state.individualHexagonStates };\r\n      let newHexagonStates = { ...state.fullHexagonStates };\r\n      if (mazeName in state.mazes) {\r\n        newIndividualStates = state.mazes[mazeName];\r\n\r\n        newHexagonStates = {\r\n          goal: [],\r\n          start: [],\r\n          animated: [],\r\n          wall: [],\r\n          path: [],\r\n        };\r\n\r\n        for (const stringCoord in newIndividualStates) {\r\n          const coord = stringCoord.split(\",\").map(Number) as Coord;\r\n          newHexagonStates[newIndividualStates[stringCoord]].push(coord);\r\n        }\r\n      }\r\n\r\n      return {\r\n        ...state,\r\n        individualHexagonStates: newIndividualStates,\r\n        fullHexagonStates: newHexagonStates,\r\n      };\r\n    default:\r\n      console.log(\"Uncaught action\", action);\r\n      return state;\r\n  }\r\n};\r\n","import { createStore } from \"redux\";\r\nimport { stateReducer } from \"./reducer\";\r\nimport { HexagonTypes, Coords, Algorithms } from \"../types/dtypes\";\r\nimport { mazes } from \"./mazes\";\r\n\r\ntype IndividualHexagonTypes = { [index: string]: string };\r\ntype Mazes = { [index: string]: IndividualHexagonTypes };\r\n\r\nexport interface Store {\r\n  fullHexagonStates: {\r\n    [index: string]: Coords;\r\n  };\r\n  individualHexagonStates: IndividualHexagonTypes;\r\n  mouseState: boolean;\r\n  selected: HexagonTypes;\r\n  algorithm: Algorithms | \"\";\r\n  gridSize: {\r\n    sizeX: number;\r\n    sizeY: number;\r\n  };\r\n  reset: boolean;\r\n  mazes: Mazes;\r\n}\r\n\r\nexport const initialState: Store = {\r\n  algorithm: \"\",\r\n  selected: \"wall\",\r\n  mouseState: false,\r\n  fullHexagonStates: {\r\n    goal: [],\r\n    start: [],\r\n    wall: [],\r\n    animated: [],\r\n    path: [],\r\n  },\r\n  individualHexagonStates: {},\r\n  gridSize: {\r\n    sizeX: 0,\r\n    sizeY: 0,\r\n  },\r\n  reset: false,\r\n  mazes: mazes,\r\n};\r\n\r\nexport default createStore(stateReducer, initialState);\r\n","export const mazes = {\r\n  Default: {\r\n    \"7,3\": \"goal\",\r\n    \"4,5\": \"start\",\r\n    \"8,2\": \"wall\",\r\n    \"5,4\": \"wall\",\r\n    \"6,7\": \"wall\",\r\n    \"5,5\": \"wall\",\r\n    \"6,4\": \"wall\",\r\n    \"7,4\": \"wall\",\r\n    \"6,5\": \"wall\",\r\n    \"7,6\": \"wall\",\r\n    \"4,3\": \"wall\",\r\n    \"4,2\": \"wall\",\r\n    \"3,2\": \"wall\",\r\n    \"7,7\": \"wall\",\r\n    \"8,6\": \"wall\",\r\n    \"8,5\": \"wall\",\r\n  },\r\n  CleanGrid: {},\r\n  LongMaze: {\r\n    \"1,0\": \"wall\",\r\n    \"1,1\": \"wall\",\r\n    \"1,3\": \"wall\",\r\n    \"1,5\": \"wall\",\r\n    \"1,9\": \"wall\",\r\n    \"2,3\": \"wall\",\r\n    \"2,5\": \"wall\",\r\n    \"2,9\": \"wall\",\r\n    \"3,1\": \"wall\",\r\n    \"3,3\": \"wall\",\r\n    \"3,5\": \"wall\",\r\n    \"3,7\": \"start\",\r\n    \"3,9\": \"wall\",\r\n    \"4,2\": \"wall\",\r\n    \"4,3\": \"wall\",\r\n    \"4,5\": \"wall\",\r\n    \"4,9\": \"wall\",\r\n    \"5,0\": \"wall\",\r\n    \"5,1\": \"wall\",\r\n    \"5,3\": \"wall\",\r\n    \"5,6\": \"wall\",\r\n    \"5,7\": \"wall\",\r\n    \"5,8\": \"wall\",\r\n    \"6,4\": \"wall\",\r\n    \"6,5\": \"wall\",\r\n    \"6,9\": \"wall\",\r\n    \"6,10\": \"wall\",\r\n    \"7,0\": \"wall\",\r\n    \"7,1\": \"wall\",\r\n    \"7,2\": \"wall\",\r\n    \"7,4\": \"wall\",\r\n    \"7,6\": \"wall\",\r\n    \"7,7\": \"wall\",\r\n    \"7,8\": \"wall\",\r\n    \"7,11\": \"wall\",\r\n    \"8,2\": \"wall\",\r\n    \"8,3\": \"wall\",\r\n    \"8,9\": \"wall\",\r\n    \"8,10\": \"wall\",\r\n    \"9,4\": \"wall\",\r\n    \"9,7\": \"wall\",\r\n    \"9,8\": \"wall\",\r\n    \"10,0\": \"wall\",\r\n    \"10,1\": \"wall\",\r\n    \"10,6\": \"wall\",\r\n    \"10,9\": \"wall\",\r\n    \"11,3\": \"wall\",\r\n    \"11,7\": \"wall\",\r\n    \"11,8\": \"wall\",\r\n    \"12,1\": \"wall\",\r\n    \"12,4\": \"wall\",\r\n    \"12,5\": \"wall\",\r\n    \"12,9\": \"wall\",\r\n    \"13,2\": \"wall\",\r\n    \"13,3\": \"wall\",\r\n    \"13,9\": \"wall\",\r\n    \"13,10\": \"wall\",\r\n    \"14,3\": \"wall\",\r\n    \"14,5\": \"wall\",\r\n    \"14,9\": \"wall\",\r\n    \"15,3\": \"wall\",\r\n    \"15,6\": \"wall\",\r\n    \"15,7\": \"wall\",\r\n    \"15,9\": \"wall\",\r\n    \"15,11\": \"wall\",\r\n    \"16,0\": \"wall\",\r\n    \"16,1\": \"wall\",\r\n    \"16,5\": \"wall\",\r\n    \"16,8\": \"wall\",\r\n    \"16,9\": \"wall\",\r\n    \"17,0\": \"wall\",\r\n    \"17,1\": \"wall\",\r\n    \"17,2\": \"wall\",\r\n    \"17,3\": \"wall\",\r\n    \"17,5\": \"wall\",\r\n    \"17,9\": \"wall\",\r\n    \"18,2\": \"wall\",\r\n    \"18,3\": \"wall\",\r\n    \"18,4\": \"wall\",\r\n    \"18,5\": \"wall\",\r\n    \"18,9\": \"wall\",\r\n    \"18,10\": \"wall\",\r\n    \"19,1\": \"wall\",\r\n    \"19,4\": \"wall\",\r\n    \"19,5\": \"wall\",\r\n    \"19,9\": \"wall\",\r\n    \"20,2\": \"wall\",\r\n    \"20,3\": \"wall\",\r\n    \"20,7\": \"wall\",\r\n    \"20,8\": \"wall\",\r\n    \"20,9\": \"wall\",\r\n    \"20,11\": \"wall\",\r\n    \"21,0\": \"wall\",\r\n    \"21,1\": \"wall\",\r\n    \"21,4\": \"wall\",\r\n    \"21,5\": \"wall\",\r\n    \"21,9\": \"wall\",\r\n    \"22,2\": \"wall\",\r\n    \"22,3\": \"wall\",\r\n    \"22,6\": \"wall\",\r\n    \"22,7\": \"wall\",\r\n    \"23,1\": \"wall\",\r\n    \"23,4\": \"wall\",\r\n    \"23,7\": \"wall\",\r\n    \"23,8\": \"wall\",\r\n    \"23,9\": \"wall\",\r\n    \"24,1\": \"wall\",\r\n    \"24,2\": \"goal\",\r\n    \"24,4\": \"wall\",\r\n    \"24,6\": \"wall\",\r\n    \"24,10\": \"wall\",\r\n    \"24,11\": \"wall\",\r\n    \"25,1\": \"wall\",\r\n    \"25,3\": \"wall\",\r\n    \"25,4\": \"wall\",\r\n    \"25,7\": \"wall\",\r\n    \"25,8\": \"wall\",\r\n    \"25,9\": \"wall\",\r\n    \"26,1\": \"wall\",\r\n    \"26,2\": \"wall\",\r\n    \"26,4\": \"wall\",\r\n    \"26,5\": \"wall\",\r\n    \"26,6\": \"wall\",\r\n    \"26,7\": \"wall\",\r\n    \"26,10\": \"wall\",\r\n    \"27,9\": \"wall\",\r\n  },\r\n  HexagonMaze: {\r\n    \"10,6\": \"goal\",\r\n    \"10,5\": \"wall\",\r\n    \"11,6\": \"wall\",\r\n    \"10,7\": \"wall\",\r\n    \"9,5\": \"wall\",\r\n    \"9,6\": \"wall\",\r\n    \"8,8\": \"wall\",\r\n    \"8,9\": \"wall\",\r\n    \"9,9\": \"wall\",\r\n    \"10,9\": \"wall\",\r\n    \"11,9\": \"wall\",\r\n    \"12,8\": \"wall\",\r\n    \"12,7\": \"wall\",\r\n    \"13,6\": \"wall\",\r\n    \"12,5\": \"wall\",\r\n    \"12,4\": \"wall\",\r\n    \"7,7\": \"wall\",\r\n    \"7,6\": \"wall\",\r\n    \"7,5\": \"wall\",\r\n    \"8,4\": \"wall\",\r\n    \"8,3\": \"wall\",\r\n    \"9,3\": \"wall\",\r\n    \"10,3\": \"wall\",\r\n    \"14,8\": \"wall\",\r\n    \"13,9\": \"wall\",\r\n    \"13,10\": \"wall\",\r\n    \"12,11\": \"wall\",\r\n    \"11,11\": \"wall\",\r\n    \"10,11\": \"wall\",\r\n    \"9,11\": \"wall\",\r\n    \"8,11\": \"wall\",\r\n    \"7,11\": \"wall\",\r\n    \"7,10\": \"wall\",\r\n    \"6,9\": \"wall\",\r\n    \"6,8\": \"wall\",\r\n    \"5,7\": \"wall\",\r\n    \"5,6\": \"wall\",\r\n    \"5,5\": \"wall\",\r\n    \"6,4\": \"wall\",\r\n    \"6,3\": \"wall\",\r\n    \"7,2\": \"wall\",\r\n    \"7,1\": \"wall\",\r\n    \"8,1\": \"wall\",\r\n    \"9,1\": \"wall\",\r\n    \"10,1\": \"wall\",\r\n    \"11,1\": \"wall\",\r\n    \"12,1\": \"wall\",\r\n    \"13,2\": \"wall\",\r\n    \"13,3\": \"wall\",\r\n    \"14,4\": \"wall\",\r\n    \"14,5\": \"wall\",\r\n    \"15,6\": \"wall\",\r\n    \"6,0\": \"wall\",\r\n    \"5,1\": \"wall\",\r\n    \"5,2\": \"wall\",\r\n    \"4,3\": \"wall\",\r\n    \"4,4\": \"wall\",\r\n    \"3,5\": \"wall\",\r\n    \"3,6\": \"wall\",\r\n    \"3,7\": \"wall\",\r\n    \"4,8\": \"wall\",\r\n    \"4,9\": \"wall\",\r\n    \"5,10\": \"wall\",\r\n    \"5,11\": \"wall\",\r\n    \"6,12\": \"wall\",\r\n    \"6,13\": \"wall\",\r\n    \"13,13\": \"wall\",\r\n    \"14,12\": \"wall\",\r\n    \"14,11\": \"wall\",\r\n    \"15,10\": \"wall\",\r\n    \"15,9\": \"wall\",\r\n    \"16,8\": \"wall\",\r\n    \"16,7\": \"wall\",\r\n    \"17,6\": \"wall\",\r\n    \"16,5\": \"wall\",\r\n    \"16,4\": \"wall\",\r\n    \"15,3\": \"wall\",\r\n    \"15,2\": \"wall\",\r\n    \"14,1\": \"wall\",\r\n    \"14,0\": \"wall\",\r\n    \"9,13\": \"start\",\r\n  },\r\n  MaizeMaze: {\r\n    \"0,0\": \"start\",\r\n    \"25,13\": \"goal\",\r\n    \"2,0\": \"wall\",\r\n    \"1,1\": \"wall\",\r\n    \"0,3\": \"wall\",\r\n    \"1,3\": \"wall\",\r\n    \"2,3\": \"wall\",\r\n    \"3,1\": \"wall\",\r\n    \"4,1\": \"wall\",\r\n    \"7,0\": \"wall\",\r\n    \"6,1\": \"wall\",\r\n    \"5,1\": \"wall\",\r\n    \"4,3\": \"wall\",\r\n    \"4,4\": \"wall\",\r\n    \"3,5\": \"wall\",\r\n    \"2,5\": \"wall\",\r\n    \"1,5\": \"wall\",\r\n    \"5,3\": \"wall\",\r\n    \"6,3\": \"wall\",\r\n    \"7,3\": \"wall\",\r\n    \"8,2\": \"wall\",\r\n    \"8,1\": \"wall\",\r\n    \"10,1\": \"wall\",\r\n    \"10,2\": \"wall\",\r\n    \"11,1\": \"wall\",\r\n    \"12,1\": \"wall\",\r\n    \"13,1\": \"wall\",\r\n    \"9,3\": \"wall\",\r\n    \"9,4\": \"wall\",\r\n    \"8,5\": \"wall\",\r\n    \"7,5\": \"wall\",\r\n    \"6,5\": \"wall\",\r\n    \"5,5\": \"wall\",\r\n    \"0,7\": \"wall\",\r\n    \"1,7\": \"wall\",\r\n    \"2,6\": \"wall\",\r\n    \"6,7\": \"wall\",\r\n    \"5,7\": \"wall\",\r\n    \"4,7\": \"wall\",\r\n    \"3,7\": \"wall\",\r\n    \"2,9\": \"wall\",\r\n    \"1,9\": \"wall\",\r\n    \"4,8\": \"wall\",\r\n    \"4,9\": \"wall\",\r\n    \"5,10\": \"wall\",\r\n    \"1,10\": \"wall\",\r\n    \"1,11\": \"wall\",\r\n    \"1,12\": \"wall\",\r\n    \"2,12\": \"wall\",\r\n    \"3,12\": \"wall\",\r\n    \"4,12\": \"wall\",\r\n    \"5,12\": \"wall\",\r\n    \"6,12\": \"wall\",\r\n    \"7,12\": \"wall\",\r\n    \"9,12\": \"wall\",\r\n    \"8,12\": \"wall\",\r\n    \"9,13\": \"wall\",\r\n    \"7,10\": \"wall\",\r\n    \"8,10\": \"wall\",\r\n    \"9,10\": \"wall\",\r\n    \"8,8\": \"wall\",\r\n    \"9,8\": \"wall\",\r\n    \"9,7\": \"wall\",\r\n    \"10,6\": \"wall\",\r\n    \"10,5\": \"wall\",\r\n    \"11,4\": \"wall\",\r\n    \"11,3\": \"wall\",\r\n    \"10,10\": \"wall\",\r\n    \"10,11\": \"wall\",\r\n    \"11,12\": \"wall\",\r\n    \"13,13\": \"wall\",\r\n    \"13,12\": \"wall\",\r\n    \"12,11\": \"wall\",\r\n    \"12,10\": \"wall\",\r\n    \"11,9\": \"wall\",\r\n    \"11,8\": \"wall\",\r\n    \"11,6\": \"wall\",\r\n    \"12,6\": \"wall\",\r\n    \"13,6\": \"wall\",\r\n    \"13,10\": \"wall\",\r\n    \"13,9\": \"wall\",\r\n    \"14,8\": \"wall\",\r\n    \"15,8\": \"wall\",\r\n    \"15,7\": \"wall\",\r\n    \"15,6\": \"wall\",\r\n    \"14,5\": \"wall\",\r\n    \"14,4\": \"wall\",\r\n    \"13,3\": \"wall\",\r\n    \"16,0\": \"wall\",\r\n    \"15,1\": \"wall\",\r\n    \"15,2\": \"wall\",\r\n    \"15,3\": \"wall\",\r\n    \"16,4\": \"wall\",\r\n    \"17,4\": \"wall\",\r\n    \"16,7\": \"wall\",\r\n    \"17,7\": \"wall\",\r\n    \"18,7\": \"wall\",\r\n    \"19,7\": \"wall\",\r\n    \"19,5\": \"wall\",\r\n    \"19,4\": \"wall\",\r\n    \"20,6\": \"wall\",\r\n    \"18,3\": \"wall\",\r\n    \"18,2\": \"wall\",\r\n    \"17,2\": \"wall\",\r\n    \"20,2\": \"wall\",\r\n    \"21,2\": \"wall\",\r\n    \"22,2\": \"wall\",\r\n    \"23,2\": \"wall\",\r\n    \"24,2\": \"wall\",\r\n    \"20,1\": \"wall\",\r\n    \"23,0\": \"wall\",\r\n    \"21,4\": \"wall\",\r\n    \"20,4\": \"wall\",\r\n    \"22,4\": \"wall\",\r\n    \"23,4\": \"wall\",\r\n    \"24,4\": \"wall\",\r\n    \"25,6\": \"wall\",\r\n    \"24,6\": \"wall\",\r\n    \"23,6\": \"wall\",\r\n    \"22,6\": \"wall\",\r\n    \"21,7\": \"wall\",\r\n    \"22,8\": \"wall\",\r\n    \"20,9\": \"wall\",\r\n    \"19,9\": \"wall\",\r\n    \"18,9\": \"wall\",\r\n    \"17,9\": \"wall\",\r\n    \"16,9\": \"wall\",\r\n    \"21,10\": \"wall\",\r\n    \"22,10\": \"wall\",\r\n    \"23,10\": \"wall\",\r\n    \"24,10\": \"wall\",\r\n    \"24,9\": \"wall\",\r\n    \"24,8\": \"wall\",\r\n    \"24,11\": \"wall\",\r\n    \"24,12\": \"wall\",\r\n    \"13,11\": \"wall\",\r\n    \"14,11\": \"wall\",\r\n    \"15,11\": \"wall\",\r\n    \"16,11\": \"wall\",\r\n    \"18,11\": \"wall\",\r\n    \"18,12\": \"wall\",\r\n    \"19,13\": \"wall\",\r\n    \"20,12\": \"wall\",\r\n    \"22,11\": \"wall\",\r\n    \"22,12\": \"wall\",\r\n  },\r\n};\r\n","import { HexagonTypes, Coord, Algorithms } from \"../types/dtypes\";\r\n\r\nexport const NEW_HEXAGON_STATE = \"new_hexagon_state\";\r\n\r\nexport const NEW_MOUSE_STATE = \"new_mouse_state\";\r\n\r\nexport const NEW_SELECTED = \"new_selected\";\r\n\r\nexport const NEW_ALGORITHM = \"new_algorithm\";\r\n\r\nexport const NEW_GRID_SIZE = \"new_grid_size\";\r\n\r\nexport const RESET_ANIMATIONS = \"reset_animations\";\r\n\r\nexport const ANIMATION_STOPPED = \"animation_stopped\";\r\n\r\nexport const PRESET_GRID = \"preset_grid\";\r\n\r\nexport interface NewHexagonState {\r\n  type: typeof NEW_HEXAGON_STATE;\r\n  payload: {\r\n    coord: Coord;\r\n    newState: HexagonTypes;\r\n  };\r\n}\r\n\r\nexport interface NewMouseState {\r\n  type: typeof NEW_MOUSE_STATE;\r\n  payload: {\r\n    mouseState: boolean;\r\n  };\r\n}\r\n\r\nexport interface NewSelected {\r\n  type: typeof NEW_SELECTED;\r\n  payload: {\r\n    selected: HexagonTypes;\r\n  };\r\n}\r\n\r\nexport interface NewAlgorithm {\r\n  type: typeof NEW_ALGORITHM;\r\n  payload: {\r\n    algorithm: Algorithms;\r\n  };\r\n}\r\n\r\nexport interface NewGridSize {\r\n  type: typeof NEW_GRID_SIZE;\r\n  payload: {\r\n    sizeX: number;\r\n    sizeY: number;\r\n  };\r\n}\r\n\r\nexport interface ResetAnimations {\r\n  type: typeof RESET_ANIMATIONS;\r\n}\r\n\r\nexport interface AnimationStopped {\r\n  type: typeof ANIMATION_STOPPED;\r\n}\r\n\r\nexport interface PresetGrid {\r\n  type: typeof PRESET_GRID;\r\n  payload: {\r\n    name: string;\r\n  };\r\n}\r\nexport type Actions =\r\n  | NewHexagonState\r\n  | NewMouseState\r\n  | NewSelected\r\n  | NewAlgorithm\r\n  | NewGridSize\r\n  | ResetAnimations\r\n  | AnimationStopped\r\n  | PresetGrid;\r\n","import { HexagonTypes, Coord, Algorithms } from \"../types/dtypes\";\r\nimport {\r\n  NEW_HEXAGON_STATE,\r\n  NewHexagonState,\r\n  NEW_MOUSE_STATE,\r\n  NEW_SELECTED,\r\n  NEW_ALGORITHM,\r\n  NEW_GRID_SIZE,\r\n  RESET_ANIMATIONS,\r\n  ANIMATION_STOPPED,\r\n  PRESET_GRID,\r\n} from \"./actions\";\r\nimport store from \"./store\";\r\n\r\nexport const dispatchHexagonState = (coord: Coord, newState: HexagonTypes) => {\r\n  store.dispatch({\r\n    type: NEW_HEXAGON_STATE,\r\n    payload: {\r\n      coord,\r\n      newState,\r\n    },\r\n  } as NewHexagonState);\r\n};\r\n\r\nexport const dispatchNewMouseState = (mouseState: boolean) => {\r\n  store.dispatch({\r\n    type: NEW_MOUSE_STATE,\r\n    payload: {\r\n      mouseState,\r\n    },\r\n  });\r\n};\r\n\r\nexport const dispatchNewSelected = (selected: HexagonTypes) => {\r\n  store.dispatch({\r\n    type: NEW_SELECTED,\r\n    payload: {\r\n      selected,\r\n    },\r\n  });\r\n};\r\n\r\nexport const dispatchNewAlgorithm = (algorithm: Algorithms) => {\r\n  store.dispatch({\r\n    type: NEW_ALGORITHM,\r\n    payload: {\r\n      algorithm,\r\n    },\r\n  });\r\n};\r\n\r\nexport const dispatchNewGridSize = (sizeX = -1, sizeY = -1) => {\r\n  store.dispatch({\r\n    type: NEW_GRID_SIZE,\r\n    payload: {\r\n      sizeX,\r\n      sizeY,\r\n    },\r\n  });\r\n};\r\n\r\nexport const dispatchResetAnimation = () => {\r\n  store.dispatch({\r\n    type: RESET_ANIMATIONS,\r\n  });\r\n};\r\n\r\nexport const dispatchAnimationStopped = () => {\r\n  store.dispatch({\r\n    type: ANIMATION_STOPPED,\r\n  });\r\n};\r\n\r\nexport const dispatchPresetGrid = (name: string) => {\r\n  store.dispatch({\r\n    type: PRESET_GRID,\r\n    payload: {\r\n      name,\r\n    },\r\n  });\r\n};\r\n","import { twoDToOneDCoord } from \"../Utilities/utilities\";\r\nimport { solver, PathError } from \"./solver\";\r\nimport { dijkstraMoveOrder } from \"./Dijkstra/dijkstra\";\r\nimport {\r\n  dispatchAnimationStopped,\r\n  dispatchHexagonState,\r\n} from \"../redux/dispatchers\";\r\nimport store from \"../redux/store\";\r\nimport { openNotification } from \"../Utilities/utilities\";\r\n\r\nexport const router = (algorithm, hexagonStates, sizeX, sizeY) => {\r\n  let moveOrder;\r\n  switch (algorithm) {\r\n    case \"dijkstra\":\r\n      moveOrder = dijkstraMoveOrder;\r\n      break;\r\n    default:\r\n      console.log(\"unknown algorithm\", algorithm);\r\n  }\r\n  pathFinder(moveOrder, hexagonStates, sizeX, sizeY);\r\n};\r\n\r\nexport const pathFinder = async (moveOrder, hexagonStates, sizeX, sizeY) => {\r\n  // grid1D is a 1d array containing the type of each of the hexagon states\r\n  const grid1D = new Array(sizeX * sizeY).fill(0);\r\n\r\n  // shortestPathGrid will be a 1d array that contains at coordinate x, the coordinate of the\r\n  // previous coordinate on the shortest path to coordinate x\r\n  // e.g. [-1, -1, [5, 3], [0, 2], -1]\r\n  const shortestPathGrid = new Array(sizeX * sizeY).fill(-1);\r\n\r\n  if (hexagonStates.wall.length !== 0) {\r\n    for (const wallCoord of hexagonStates.wall) {\r\n      grid1D[twoDToOneDCoord(wallCoord, sizeY)] = -1;\r\n    }\r\n  }\r\n\r\n  const goal = hexagonStates.goal[0];\r\n  const start = hexagonStates.start[0];\r\n\r\n  const goal1DCoord = twoDToOneDCoord(goal, sizeY);\r\n  grid1D[goal1DCoord] = 1;\r\n  const start1DCoord = twoDToOneDCoord(start, sizeY);\r\n  shortestPathGrid[start1DCoord] = start;\r\n\r\n  try {\r\n    // const { path, finishedShortestPathGrid, coordsOrder} = solver(\r\n    const { path, coordsOrder } = solver(\r\n      grid1D,\r\n      shortestPathGrid,\r\n      start,\r\n      goal,\r\n      sizeX,\r\n      sizeY,\r\n      moveOrder\r\n    );\r\n\r\n    const pathPeriod = 3000 / path.length;\r\n    const checkedPeriod = 10000 / coordsOrder.length;\r\n\r\n    dispatchAnimationStopped();\r\n\r\n    async function dispatchPath(path) {\r\n      if (!store.getState().reset) {\r\n        if (path.length > 0) {\r\n          if (path.length === 1) {\r\n            dispatchAnimationStopped();\r\n          }\r\n          const coord = path.shift();\r\n          dispatchHexagonState(coord, \"path\");\r\n          setTimeout(() => dispatchPath(path), pathPeriod);\r\n        }\r\n      } else {\r\n        dispatchAnimationStopped();\r\n      }\r\n    }\r\n\r\n    async function dispatchSolverAnimation(coordsOrder, path) {\r\n      if (!store.getState().reset) {\r\n        if (coordsOrder.length > 0) {\r\n          const coord = coordsOrder.shift();\r\n          dispatchHexagonState(coord, \"animated\");\r\n          setTimeout(\r\n            () => dispatchSolverAnimation(coordsOrder, path),\r\n            checkedPeriod\r\n          );\r\n        } else {\r\n          dispatchPath(path.slice(1, -1).reverse());\r\n        }\r\n      } else {\r\n        dispatchAnimationStopped();\r\n      }\r\n    }\r\n\r\n    dispatchSolverAnimation(coordsOrder, path);\r\n  } catch (error) {\r\n    if (error instanceof PathError) {\r\n      openNotification(\r\n        \"Path not possible\",\r\n        \"The path you have created does not have a valid route to get to the goal, please create another maze.\",\r\n        10\r\n      );\r\n    }\r\n    console.log(\"Error\", error);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Coord, HexagonTypes } from \"../types/dtypes\";\r\nimport { dispatchHexagonState } from \"../redux/dispatchers\";\r\nimport { useHexagonState } from \"../hooks/stateHook\";\r\nimport store from \"../redux/store\";\r\n\r\nexport interface FixedHexagonStylingProps {\r\n  middleWidth: number;\r\n  middleHeight: number;\r\n  topBotDiameter: number;\r\n  margin: number;\r\n  left: number;\r\n  topBot: number;\r\n  scaleTransform: number;\r\n}\r\n\r\nexport interface StyledHexagonProps extends FixedHexagonStylingProps {\r\n  backgroundColor: string;\r\n}\r\n// TODO: Cannot find a way to set multiple properties to the same value,\r\n// would be useful for setting border-left and border-right at the same time,\r\n// have tried using , like with &:before &:after but that doesn't work\r\n/**\r\n * A CSS hexagon, with configurable size, colours, and border\r\n */\r\nconst StyledHexagon = styled.div`\r\n  transition: 0.2s;\r\n  position: absolute;\r\n  width: ${(props: StyledHexagonProps) => `${props.middleWidth}px`};\r\n  height: ${(props: StyledHexagonProps) => `${props.middleHeight}px`};\r\n  background-color: ${(props: StyledHexagonProps) => props.backgroundColor};\r\n  &:before,\r\n  &:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    width: ${(props: StyledHexagonProps) => `${props.topBotDiameter}px`};\r\n    height: ${(props: StyledHexagonProps) => `${props.topBotDiameter}px`};\r\n    left: ${(props: StyledHexagonProps) => `${props.left}px`};\r\n    transform: scaleY(0.5773502692) rotate(-45deg);\r\n    background-color: inherit;\r\n  }\r\n  &:before {\r\n    top: ${(props: StyledHexagonProps) => `${props.topBot}px`};\r\n  }\r\n  &:after {\r\n    bottom: ${(props: StyledHexagonProps) => `${props.topBot}px`};\r\n  }\r\n`;\r\n\r\nconst StyledHexagonWithBorder = (props: any) => {\r\n  const { largeHex, smallHex } = props;\r\n\r\n  const leftShift = (largeHex.middleWidth - smallHex.middleWidth) / 2;\r\n  const downShift = (largeHex.middleHeight - smallHex.middleHeight) / 2;\r\n  const smallHexTransform = `translate(${leftShift}px, ${downShift}px)`;\r\n\r\n  return (\r\n    <StyledHexagon\r\n      {...{ ...largeHex, ...props, backgroundColor: \"#000000\" }}\r\n      style={{ zIndex: 1, ...props.style }}\r\n    >\r\n      <StyledHexagon\r\n        {...{ ...smallHex, backgroundColor: props.backgroundColor }}\r\n        style={{ zIndex: 5, transform: smallHexTransform }}\r\n      />\r\n    </StyledHexagon>\r\n  );\r\n};\r\n\r\n/**\r\n * Returns an object containing all parameters that physically specify a hexagon\r\n * @param {float} width: the distance between two opposite sides of the hexagon, not\r\n * including the border width\r\n * @param {float} borderWidth: the width of the border, from the outer of the hexagon\r\n * to the outer of the border\r\n */\r\nexport const hexagonStylingProps = ({\r\n  width,\r\n}: any): FixedHexagonStylingProps => {\r\n  return {\r\n    middleWidth: width,\r\n    middleHeight: (Math.sqrt(3) / 3) * width,\r\n    topBotDiameter: width / Math.sqrt(2),\r\n    margin: (width * Math.sqrt(3)) / 6,\r\n    left: -width / (Math.sqrt(2) * 2) + width / 2,\r\n    topBot: -width / (Math.sqrt(2) * 2),\r\n    scaleTransform: Math.sqrt(3) / 3,\r\n  };\r\n};\r\n\r\n/**\r\n * Converts the type of a hexagon into the colour it's background should be\r\n * @param type: the state of the hexagon, currently 'space', 'wall', 'goal', or 'start'\r\n */\r\nconst typeToStyling = (type: string) => {\r\n  switch (type) {\r\n    case \"space\":\r\n      break;\r\n    case \"wall\":\r\n      return \"#000000\";\r\n    case \"goal\":\r\n      return \"#00ff00\";\r\n    case \"start\":\r\n      return \"#ff0000\";\r\n    case \"animated\":\r\n      return \"#ffff00\";\r\n    case \"path\":\r\n      return \"#ffa500\";\r\n    default:\r\n      break;\r\n  }\r\n  return \"#64C7CC\";\r\n};\r\n\r\nexport interface HexagonProps {\r\n  largeHex: any;\r\n  smallHex: any;\r\n  key: string;\r\n  style: any;\r\n  coord: Coord;\r\n}\r\n\r\nconst Hexagon = (props: HexagonProps) => {\r\n  const handleChange = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    oldType: HexagonTypes\r\n  ) => {\r\n    if (event.button === 0) {\r\n      const newType = store.getState().selected;\r\n      if (newType !== oldType) {\r\n        dispatchHexagonState(props.coord, newType);\r\n      }\r\n    } else if (event.button === 2) {\r\n      if (\"space\" !== oldType) {\r\n        dispatchHexagonState(props.coord, \"space\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleHover = (\r\n    event: React.MouseEvent<HTMLElement>,\r\n    oldType: HexagonTypes\r\n  ) => {\r\n    const mouseDown = store.getState().mouseState;\r\n\r\n    if (mouseDown) {\r\n      handleChange(event, oldType);\r\n    }\r\n  };\r\n\r\n  const type = useHexagonState(props.coord) as HexagonTypes;\r\n  const { largeHex, smallHex, style } = props as HexagonProps;\r\n  const backgroundColor = typeToStyling(type);\r\n  console.log(\"rendering\");\r\n  return (\r\n    <StyledHexagonWithBorder\r\n      {...{ largeHex, smallHex, backgroundColor }}\r\n      style={style}\r\n      onClick={(event: React.MouseEvent<HTMLElement>) =>\r\n        handleChange(event, type)\r\n      }\r\n      onMouseOver={(event: React.MouseEvent<HTMLElement>) =>\r\n        handleHover(event, type)\r\n      }\r\n      onMouseDown={(event: React.MouseEvent<HTMLElement>) =>\r\n        handleChange(event, type)\r\n      }\r\n      onDragStart={(event: React.MouseEvent<HTMLElement>) =>\r\n        event.preventDefault()\r\n      }\r\n      onContextMenu={(event: React.MouseEvent<HTMLElement>) =>\r\n        event.preventDefault()\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default Hexagon;\r\n","import { Coord } from \"../types/dtypes\"\r\nimport { useSelector } from \"react-redux\";\r\nimport { Store } from '../redux/store';\r\n\r\nexport function useHexagonState(coord: Coord) {\r\n  const hexagonState = useSelector((state: Store) => state.individualHexagonStates[coord.toString()]);\r\n  \r\n  if (hexagonState) {\r\n    return hexagonState;\r\n  } else {\r\n    return \"space\";\r\n  }\r\n}","import React from \"react\";\r\nimport { Coords } from \"../types/dtypes\";\r\nimport { CreateGridReturn } from \"./hexagonGridManager\";\r\nimport Hexagon, { FixedHexagonStylingProps } from \"../Hexagon/hexagon\";\r\nimport { WindowSize } from \"../Canvas/canvas\";\r\n\r\ntype HexagonGridProps = {\r\n  pixelsCoords: Coords;\r\n  gridProps: CreateGridReturn;\r\n  largeHex: FixedHexagonStylingProps;\r\n  smallHex: FixedHexagonStylingProps;\r\n  windowSize: WindowSize;\r\n};\r\n\r\nconst HexagonGrid = (props: HexagonGridProps) => {\r\n  const { pixelsCoords, gridProps, smallHex, largeHex, windowSize } = props;\r\n\r\n  return (\r\n    <div\r\n      data-tut=\"reactour-canvas\"\r\n      style={{ width: windowSize.width, height: windowSize.height }}\r\n    >\r\n      {gridProps &&\r\n        gridProps.coords.map((coord, i) => {\r\n          const [x, y] = coord;\r\n\r\n          const transform = pixelsCoords[i];\r\n\r\n          const { offsetX, offsetY } = gridProps;\r\n\r\n          // maps hexagons to correct coordinate and centre the entire grid\r\n          const style = {\r\n            transform: `translate(${transform[0] + offsetX}px, ${\r\n              transform[1] + offsetY\r\n            }px)`,\r\n          };\r\n\r\n          return (\r\n            <Hexagon\r\n              key={`${x}:${y}`}\r\n              style={style}\r\n              largeHex={largeHex}\r\n              smallHex={smallHex}\r\n              {...{\r\n                coord,\r\n              }}\r\n            />\r\n          );\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HexagonGrid;\r\n","import React from \"react\";\r\nimport { WindowSize } from \"../Canvas/canvas\";\r\nimport HexagonGrid from \"./hexagonGrid\";\r\nimport { Coord, Coords } from \"../types/dtypes\";\r\nimport { hexagonStylingProps } from \"../Hexagon/hexagon\";\r\nimport { dispatchNewGridSize } from \"../redux/dispatchers\";\r\n\r\ntype HexagonGridManagerProps = {\r\n  width?: number;\r\n  borderWidth?: number;\r\n  spacing?: number;\r\n  siderWidth: number;\r\n  headerHeight: number;\r\n  windowSize: WindowSize;\r\n};\r\n\r\nexport type CreateGridReturn = {\r\n  coords: Coords;\r\n  offsetX: number;\r\n  offsetY: number;\r\n  sizeX: number;\r\n  sizeY: number;\r\n  horizontalSpacing: number;\r\n  verticalSpacing: number;\r\n  borderWidth: number;\r\n  width: number;\r\n};\r\n\r\n/**\r\n * Wrapper component to manage overarching state for the hexagon grid, such\r\n * that each change of the HexagonStates don't cause a recalculation of\r\n * static properties\r\n */\r\nconst HexagonGridManager = (props: HexagonGridManagerProps) => {\r\n  const {\r\n    width = 50,\r\n    borderWidth = 10,\r\n    spacing = 5,\r\n    siderWidth,\r\n    headerHeight,\r\n    windowSize,\r\n  } = props;\r\n\r\n  /**\r\n   * Given the size of the window to display the grid, calculates the list of possible\r\n   * coordinates, the available border width for the grid, and the dimensions of the grid\r\n   * @param {number} windowSize\r\n   */\r\n  const createGrid = (\r\n    windowSize: WindowSize,\r\n    siderWidth: number,\r\n    headerHeight: number,\r\n    width: number,\r\n    spacing: number,\r\n    borderWidth: number\r\n  ): CreateGridReturn | undefined => {\r\n    const horizontalSpacing = width + spacing;\r\n    const verticalSpacing = (Math.sqrt(3) / 2) * width + spacing / 2;\r\n\r\n    if (windowSize.height !== 0 && windowSize.width !== 0) {\r\n      let sizeX = Math.floor(\r\n        (windowSize.width - siderWidth - horizontalSpacing / 2) /\r\n          horizontalSpacing\r\n      );\r\n\r\n      let sizeY = Math.floor(\r\n        (windowSize.height - headerHeight - (Math.sqrt(3) / 3) * width) /\r\n          verticalSpacing\r\n      );\r\n\r\n      if (sizeX * sizeY > 400) {\r\n        return createGrid(\r\n          windowSize,\r\n          siderWidth,\r\n          headerHeight,\r\n          width + 10,\r\n          spacing + 1,\r\n          borderWidth + 2\r\n        );\r\n      }\r\n\r\n      const offsetX =\r\n        (windowSize.width - siderWidth - (sizeX + 0.5) * horizontalSpacing) / 2;\r\n      const offsetY =\r\n        (windowSize.height - headerHeight - (sizeY + 0.5) * verticalSpacing) /\r\n        2;\r\n\r\n      const coords: Coords = [];\r\n\r\n      for (let i = 0; i < sizeX; i++) {\r\n        for (let j = 0; j < sizeY; j++) {\r\n          const coord: Coord = [i, j];\r\n          coords.push(coord);\r\n        }\r\n      }\r\n\r\n      return {\r\n        coords,\r\n        offsetX,\r\n        offsetY,\r\n        sizeX,\r\n        sizeY,\r\n        width,\r\n        horizontalSpacing,\r\n        verticalSpacing,\r\n        borderWidth,\r\n      };\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Converts a coordinate into a pixel coordinate\r\n   * @param {number} x\r\n   * @param {number} y\r\n   */\r\n  const coordToPixels = (\r\n    x: number,\r\n    y: number,\r\n    verticalSpacing: number,\r\n    horizontalSpacing: number\r\n  ): Coord => {\r\n    let pixelsX = horizontalSpacing * x;\r\n    const pixelsY = verticalSpacing * y + (Math.sqrt(3) / 6) * width;\r\n    if (y % 2 === 1) {\r\n      pixelsX += horizontalSpacing / 2;\r\n    }\r\n\r\n    return [pixelsX, pixelsY];\r\n  };\r\n\r\n  const gridProps = createGrid(\r\n    windowSize,\r\n    siderWidth,\r\n    headerHeight,\r\n    width,\r\n    spacing,\r\n    borderWidth\r\n  );\r\n\r\n  if (gridProps) {\r\n    dispatchNewGridSize(gridProps?.sizeX, gridProps?.sizeY);\r\n\r\n    // Calculate the styling props once and then use it for all hexagons\r\n    const hexagonCssProps = hexagonStylingProps({\r\n      width: gridProps.width,\r\n    });\r\n    const reducedHexagonCssProps = hexagonStylingProps({\r\n      width: gridProps.width - gridProps.borderWidth,\r\n    });\r\n\r\n    const pixelsCoords: Coords = gridProps?.coords.map((coord: Coord) =>\r\n      coordToPixels(\r\n        coord[0],\r\n        coord[1],\r\n        gridProps.verticalSpacing,\r\n        gridProps.horizontalSpacing\r\n      )\r\n    );\r\n    return (\r\n      <HexagonGrid\r\n        {...{\r\n          windowSize: props.windowSize,\r\n          largeHex: hexagonCssProps,\r\n          smallHex: reducedHexagonCssProps,\r\n          pixelsCoords,\r\n          gridProps,\r\n        }}\r\n      />\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport default HexagonGridManager;\r\n","import React, { useEffect } from \"react\";\r\nimport { Layout, Menu, Button } from \"antd\";\r\nimport {\r\n  GithubOutlined,\r\n  LinkedinOutlined,\r\n  AppstoreAddOutlined,\r\n  SettingOutlined,\r\n  CalculatorOutlined,\r\n} from \"@ant-design/icons\";\r\nimport \"./toolbar.css\";\r\nimport \"antd/dist/antd.css\";\r\nimport Canvas from \"../Canvas/canvas\";\r\nimport { router } from \"../Algorithms/base\";\r\nimport HexagonGridManager from \"../HexagonGrid/hexagonGridManager\";\r\nimport { useSelector } from \"react-redux\";\r\nimport store, { Store } from \"../redux/store\";\r\nimport {\r\n  dispatchResetAnimation,\r\n  dispatchPresetGrid,\r\n  dispatchNewGridSize,\r\n} from \"../redux/dispatchers\";\r\nimport {\r\n  dispatchNewSelected,\r\n  dispatchNewAlgorithm,\r\n} from \"../redux/dispatchers\";\r\nimport maze from \"../assets/maze.svg\";\r\nimport Paragraph from \"antd/lib/typography/Paragraph\";\r\n\r\nconst { SubMenu } = Menu;\r\nconst { Sider, Header } = Layout;\r\n\r\nconst Toolbar = (props: any) => {\r\n  console.log(\"props\", props);\r\n  const siderWidth: number = 200;\r\n  const headerHeight: number = 70;\r\n  const headerStyle = {\r\n    height: `${headerHeight}px`,\r\n  };\r\n\r\n  const goal = useSelector((state: Store) => state.fullHexagonStates.goal);\r\n  const start = useSelector((state: Store) => state.fullHexagonStates.start);\r\n  const animated = useSelector(\r\n    (state: Store) => state.fullHexagonStates.animated.length !== 0\r\n  );\r\n  const algorithm = useSelector((state: Store) => state.algorithm);\r\n\r\n  // const [displayPlayback, setDisplayPlayback] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatchPresetGrid(\"Default\");\r\n  }, []);\r\n\r\n  return (\r\n    <Layout data-tut=\"reactour-main\">\r\n      <Header\r\n        data-tut=\"reactour-header\"\r\n        style={{ ...headerStyle, paddingLeft: \"0px\", paddingRight: \"0px\" }}\r\n      >\r\n        <div\r\n          style={{\r\n            width: `${siderWidth}px`,\r\n            paddingLeft: \"20px\",\r\n            float: \"left\",\r\n            ...headerStyle,\r\n          }}\r\n        >\r\n          <img src={maze} alt={\"\"} width={\"50px\"} height={\"50px\"} />\r\n          <Paragraph\r\n            style={{ color: \"#a6adac\", float: \"right\", paddingRight: \"30px\" }}\r\n          >\r\n            Path Finder\r\n          </Paragraph>\r\n        </div>\r\n        <Menu\r\n          theme=\"dark\"\r\n          mode=\"horizontal\"\r\n          style={{\r\n            position: \"relative\",\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n          }}\r\n        >\r\n          <Menu.Item\r\n            key=\"tutorial\"\r\n            style={{ ...headerStyle, position: \"absolute\", top: 0, left: 0 }}\r\n            onClick={() => props.setIsTourOpen(true)}\r\n          >\r\n            Tutorial\r\n          </Menu.Item>\r\n          {/* <Menu.Item\r\n            key=\"playback\"\r\n            style={{ ...headerStyle, position: \"relative\", float: \"left\" }}\r\n          >\r\n            Playback Controls\r\n          </Menu.Item> */}\r\n          <Paragraph\r\n            style={{\r\n              ...headerStyle,\r\n              color: \"#a6adac\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              right: 180,\r\n            }}\r\n            copyable\r\n          >\r\n            +44 (0)7956-731633\r\n          </Paragraph>\r\n          {/* </Menu.Item> */}\r\n          <Menu.Item\r\n            key=\"github\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              float: \"right\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              right: 84,\r\n              height: `${headerHeight}px`,\r\n            }}\r\n          >\r\n            <Button\r\n              type=\"link\"\r\n              href={\"https://www.github.com/GeorgeSheppard/\"}\r\n              style={{\r\n                height: \"40px\",\r\n                width: \"44px\",\r\n                paddingLeft: \"2px\",\r\n                paddingRight: \"2px\",\r\n              }}\r\n            >\r\n              <GithubOutlined\r\n                style={{\r\n                  fontSize: `35px`,\r\n                }}\r\n              />\r\n            </Button>\r\n          </Menu.Item>\r\n          <Menu.Item\r\n            key=\"linkedin\"\r\n            style={{\r\n              display: \"flex\",\r\n              alignItems: \"center\",\r\n              float: \"right\",\r\n              position: \"absolute\",\r\n              top: 0,\r\n              right: 0,\r\n              height: `${headerHeight}px`,\r\n            }}\r\n          >\r\n            <Button\r\n              type=\"link\"\r\n              href={\"https://www.linkedin.com/in/georgesheppard/\"}\r\n              style={{\r\n                height: \"40px\",\r\n                width: \"44px\",\r\n                paddingLeft: \"2px\",\r\n                paddingRight: \"2px\",\r\n              }}\r\n            >\r\n              <LinkedinOutlined\r\n                style={{\r\n                  fontSize: `35px`,\r\n                }}\r\n              />\r\n            </Button>\r\n          </Menu.Item>\r\n        </Menu>\r\n      </Header>\r\n      <Layout>\r\n        <Sider\r\n          width={siderWidth}\r\n          className=\"site-layout-background\"\r\n          data-tut=\"reactour-sider\"\r\n        >\r\n          <Menu\r\n            mode=\"inline\"\r\n            style={{ height: `${props.windowSize.height - headerHeight}px` }}\r\n          >\r\n            <SubMenu\r\n              key=\"sub1\"\r\n              data-tut=\"reactour-tiles\"\r\n              icon={<AppstoreAddOutlined />}\r\n              title=\"Tiles\"\r\n              style={{\r\n                color:\r\n                  start.length === 0 || goal.length === 0 ? \"red\" : undefined,\r\n              }}\r\n            >\r\n              <Menu.Item\r\n                key=\"1\"\r\n                onClick={() => dispatchNewSelected(\"start\")}\r\n                style={{\r\n                  color: start.length === 0 ? \"red\" : undefined,\r\n                }}\r\n              >\r\n                {start.length === 0 ? \"Start (required)\" : \"Start\"}\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                key=\"2\"\r\n                onClick={() => dispatchNewSelected(\"goal\")}\r\n                style={{\r\n                  color: goal.length === 0 ? \"red\" : undefined,\r\n                }}\r\n              >\r\n                {goal.length === 0 ? \"Goal (required)\" : \"Goal\"}\r\n              </Menu.Item>\r\n              <Menu.Item key=\"3\" onClick={() => dispatchNewSelected(\"wall\")}>\r\n                Wall\r\n              </Menu.Item>\r\n              <Menu.Item key=\"4\" onClick={() => dispatchNewSelected(\"space\")}>\r\n                Space\r\n              </Menu.Item>\r\n            </SubMenu>\r\n            <SubMenu\r\n              key=\"sub3\"\r\n              data-tut=\"reactour-algorithm\"\r\n              icon={<CalculatorOutlined />}\r\n              title=\"Algorithm\"\r\n              style={{\r\n                color: algorithm.length === 0 ? \"red\" : undefined,\r\n              }}\r\n            >\r\n              <Menu.Item\r\n                key=\"9\"\r\n                onClick={() => dispatchNewAlgorithm(\"dijkstra\")}\r\n              >\r\n                Dijkstra\r\n              </Menu.Item>\r\n              {/* <Menu.Item\r\n                key=\"10\"\r\n                onClick={() => dispatchNewAlgorithm(\"greedy\")}\r\n              >\r\n                Greedy\r\n              </Menu.Item> */}\r\n            </SubMenu>\r\n            <SubMenu\r\n              key=\"mazes\"\r\n              data-tut=\"reactour-mazes\"\r\n              icon={<SettingOutlined />}\r\n              title=\"Preset Mazes\"\r\n            >\r\n              <Menu.Item\r\n                key=\"Maze 1\"\r\n                onClick={() => {\r\n                  dispatchPresetGrid(\"Default\");\r\n                  dispatchNewGridSize();\r\n                }}\r\n              >\r\n                Default\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                key=\"Maze 2\"\r\n                onClick={() => {\r\n                  dispatchPresetGrid(\"CleanGrid\");\r\n                  dispatchNewGridSize();\r\n                }}\r\n              >\r\n                Blank Grid\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                key=\"Maze 3\"\r\n                onClick={() => {\r\n                  dispatchPresetGrid(\"LongMaze\");\r\n                  dispatchNewGridSize();\r\n                }}\r\n              >\r\n                Long Maze\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                key=\"Maze 4\"\r\n                onClick={() => {\r\n                  dispatchPresetGrid(\"HexagonMaze\");\r\n                  dispatchNewGridSize();\r\n                }}\r\n              >\r\n                Hexagon Maze\r\n              </Menu.Item>\r\n              <Menu.Item\r\n                key=\"Maze 5\"\r\n                onClick={() => {\r\n                  dispatchPresetGrid(\"MaizeMaze\");\r\n                  dispatchNewGridSize();\r\n                }}\r\n              >\r\n                Maize Maze\r\n              </Menu.Item>\r\n            </SubMenu>\r\n            <div\r\n              style={{\r\n                // display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                marginTop: \"20px\",\r\n                marginRight: \"10px\",\r\n                marginLeft: \"10px\",\r\n              }}\r\n            >\r\n              <Button\r\n                type=\"primary\"\r\n                shape=\"round\"\r\n                size={\"large\"}\r\n                data-tut=\"reactour-visualise\"\r\n                disabled={\r\n                  algorithm.length === 0 ||\r\n                  goal.length === 0 ||\r\n                  start.length === 0\r\n                }\r\n                onClick={() => {\r\n                  dispatchResetAnimation();\r\n                  const gridSize = store.getState().gridSize;\r\n                  const hexagonStates = store.getState().fullHexagonStates;\r\n                  console.log(\r\n                    JSON.stringify(store.getState().individualHexagonStates)\r\n                  );\r\n                  router(\r\n                    algorithm,\r\n                    hexagonStates,\r\n                    gridSize.sizeX,\r\n                    gridSize.sizeY\r\n                  );\r\n                }}\r\n                block={true}\r\n              >\r\n                Visualise\r\n              </Button>\r\n              <Button\r\n                type=\"primary\"\r\n                data-tut=\"reactour-reset\"\r\n                shape=\"round\"\r\n                size={\"large\"}\r\n                disabled={!animated}\r\n                onClick={() => dispatchResetAnimation()}\r\n                style={{\r\n                  marginTop: \"20px\",\r\n                }}\r\n                block\r\n              >\r\n                Reset\r\n              </Button>\r\n            </div>\r\n          </Menu>\r\n        </Sider>\r\n        <HexagonGridManager\r\n          headerHeight={headerHeight}\r\n          siderWidth={siderWidth}\r\n          windowSize={{\r\n            height: props.windowSize.height,\r\n            width: props.windowSize.width,\r\n          }}\r\n        />\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst Page = (props: any) => {\r\n  return <Canvas Component={Toolbar} {...props} />;\r\n};\r\n\r\nexport default Page;\r\n","import React, { useState } from \"react\";\r\nimport Page from \"./Toolbar/toolbar\";\r\nimport { dispatchNewMouseState } from \"./redux/dispatchers\";\r\nimport Tour from \"reactour\";\r\n\r\nconst steps = [\r\n  {\r\n    selector: '[data-tut=\"reactour-main\"]',\r\n    content:\r\n      \"Welcome to Path Finder! The goal of this website is simple, to help you visualise how computers solve mazes.\",\r\n  },\r\n  {\r\n    selector: '[data-tut=\"reactour-canvas\"]',\r\n    content:\r\n      \"This is the main canvas, drag over or click on the tiles to create a maze to solve!\",\r\n  },\r\n  {\r\n    selector: '[data-tut=\"reactour-sider\"]',\r\n    content:\r\n      \"Here is the sider, this lets you select: what type of tile you want to place, how the computer solves the maze, and to make it a bit easier there are some already created mazes for you to try!\",\r\n  },\r\n  {\r\n    selector: '[data-tut=\"reactour-tiles\"]',\r\n    content:\r\n      \"Here are the tiles you can choose from, other than having one start and one end tile, you are free to choose what to do...\",\r\n  },\r\n  {\r\n    selector: '[data-tut=\"reactour-algorithm\"]',\r\n    content:\r\n      \"There are many methods computers use to solve these sort of tasks, here are the ones you can visualise!\",\r\n  },\r\n  {\r\n    selector: '[data-tut=\"reactour-visualise\"]',\r\n    content:\r\n      \"Once your maze has everything it needs, you can click this button to watch the maze being solved.\",\r\n  },\r\n  {\r\n    selector: '[data-tut=\"reactour-reset\"]',\r\n    content:\r\n      \"After you've watched the animation, feel free to reset the animated tiles so you can create another maze!\",\r\n  },\r\n  {\r\n    selector: '[data-tut=\"reactour-main\"]',\r\n    content:\r\n      \"I hope you find this website useful, and if you have any feedback please let me know using my contact details in the top right!\",\r\n  },\r\n];\r\n\r\nconst App = () => {\r\n  const [isTourOpen, setIsTourOpen] = useState(false);\r\n\r\n  const handleMouseDown = (state) => {\r\n    return (event) => {\r\n      if (event.button === 0) {\r\n        dispatchNewMouseState(state);\r\n      }\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div onMouseDown={handleMouseDown(true)} onMouseUp={handleMouseDown(false)}>\r\n      <Page setIsTourOpen={setIsTourOpen} />\r\n      <Tour\r\n        steps={steps}\r\n        isOpen={isTourOpen}\r\n        onRequestClose={() => setIsTourOpen(false)}\r\n        disableInteration={true}\r\n        maskSpace={15}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store\";\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}